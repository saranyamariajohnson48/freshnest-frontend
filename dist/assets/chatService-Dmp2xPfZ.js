import{l as i}from"./index-DWA34nyN.js";const o="http://localhost:3001";class c{async apiRequest(a,t={}){return await i.apiRequest(a,t)}async listConversations(){const a=await this.apiRequest(`${o}/api/chat/conversations`),t=await a.json();if(!a.ok)throw new Error(t.error||"Failed to load conversations");return t}computeUnread(a,t){let s=0;const e={};for(const r of a||[]){const n=r.lastMessage;n&&String(n.sender)!==String(t)?(e[r._id]=1,s+=1):e[r._id]=0}return{total:s,byConvo:e}}async startConversation(a){const t=await this.apiRequest(`${o}/api/chat/conversations`,{method:"POST",body:JSON.stringify({participantId:a})}),s=await t.json();if(!t.ok)throw new Error(s.error||"Failed to start conversation");return s}async getMessages(a,t={}){const s=new URLSearchParams(t),e=await this.apiRequest(`${o}/api/chat/conversations/${a}/messages?${s}`),r=await e.json();if(!e.ok)throw new Error(r.error||"Failed to load messages");return r}async sendMessage(a,{text:t,attachments:s}={}){const e=await this.apiRequest(`${o}/api/chat/conversations/${a}/messages`,{method:"POST",body:JSON.stringify({text:t,attachments:s})}),r=await e.json();if(!e.ok)throw new Error(r.error||"Failed to send message");return r}async markAsRead(a){const t=await this.apiRequest(`${o}/api/chat/conversations/${a}/read`,{method:"POST"}),s=await t.json();if(!t.ok)throw new Error(s.error||"Failed to mark as read");return s}}const w=new c;export{w as default};
